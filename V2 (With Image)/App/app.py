# ====== Import Libraries ======
import streamlit as st
import matplotlib.pyplot as plt
import time
import os
import base64
from PIL import Image
import pandas as pd
from streamlit_option_menu import option_menu
from MyT5 import get_response
from Semantic_vectordb import Evaluate_response
from Image_vectordb import diagnosis
from utils import extract_emails, send_question_email, illustrate

# ====== Page Settings ======
st.set_page_config(
        page_title="Chatbot - LLM",  
        page_icon=":globe_with_meridians:",  
        layout="centered", 
        initial_sidebar_state="auto" 
    )

# ====== Diagnosis Template ======
diagnosis_template = """**Ch·∫©n ƒëo√°n:** {}

{}

**Ch·∫©n ƒëo√°n kh√°c:** {}"""


# ====== CSS Settings ======
def skinchat_css():    
    with open("./css/skinchat_styles.css", encoding="utf-8") as f:
        css = f.read()

    st.markdown(f"<style>{css}</style>", unsafe_allow_html=True)
    
def normal_css():    
    with open("./css/homepage_styles.css", encoding="utf-8") as f:
        css = f.read()

    st.markdown(f"<style>{css}</style>", unsafe_allow_html=True)
    
    
normal_css()


# ====== Sidebar ======
with st.sidebar:    
    st.image("./img/logo/logongang.png")
    selected = option_menu("Menu",["Gi·ªõi thi·ªáu","Chatbot","ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng"],
                           icons=['house','star','chat','flag'], menu_icon="cast", default_index=0,
                           styles={
                                "container": {"font-family": "Monospace"},
                                "icon": {"color":"#71738d"}, 
                                "nav-link": {"--hover-color": "#d2cdfa","font-family": "Monospace"},
                                "nav-link-selected": {"font-family": "Monospace","background-color": "#6694ed"},
                            }
                           )
    st.markdown(
        """
        <div class="sidebar-signature">
            Copyright ¬© 2024 TRONGVO & PHUONGANH
        </div>
        """,
        unsafe_allow_html=True
    )
    
    
    
# ====== Gi·ªõi thi·ªáu Page ======
if selected == "Gi·ªõi thi·ªáu":
    st.markdown("""# Gi·ªõi thi·ªáu SkinChat: 

***SkinChat***  l√† m·ªôt ·ª©ng d·ª•ng chatbot ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi V√µ Ho√†i Tr·ªçng v√† Nguy·ªÖn Th·ªã Ph∆∞∆°ng Anh, sinh vi√™n chuy√™n ng√†nh K·ªπ thu·∫≠t D·ªØ li·ªáu.  

·ª®ng d·ª•ng n√†y l√† s·∫£n ph·∫©m c·ªßa ti·ªÉu lu·∫≠n chuy√™n ng√†nh, v·ªõi m·ª•c ti√™u cung c·∫•p c√¥ng c·ª• t∆∞ v·∫•n v√† h·ªèi ƒë√°p v·ªÅ c√°c v·∫•n ƒë·ªÅ da li·ªÖu cho ng∆∞·ªùi d√πng.  

Chatbot ***SkinChat*** s·ª≠ d·ª•ng c√¥ng ngh·ªá x·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n v√† h·ªçc m√°y ti√™n ti·∫øn ƒë·ªÉ gi·∫£i ƒë√°p c√°c th·∫Øc m·∫Øc li√™n quan ƒë·∫øn chƒÉm s√≥c v√† ƒëi·ªÅu tr·ªã da.  
V·ªõi giao di·ªán th√¢n thi·ªán, ·ª©ng d·ª•ng mang l·∫°i s·ª± ti·ªán l·ª£i, h·ªó tr·ª£ ng∆∞·ªùi d√πng ti·∫øp c·∫≠n th√¥ng tin chƒÉm s√≥c s·ª©c kh·ªèe da m·ªçi l√∫c, m·ªçi n∆°i.  

Tuy nhi√™n, do th√¥ng tin t·ª´ chatbot c√≥ th·ªÉ ch∆∞a ho√†n to√†n ch√≠nh x√°c, ng∆∞·ªùi d√πng c·∫ßn ki·ªÉm tra k·ªπ l∆∞·ª°ng tr∆∞·ªõc khi √°p d·ª•ng c√°c bi·ªán ph√°p ƒëi·ªÅu tr·ªã.  

M·ª•c ti√™u c·ªßa ***SkinChat*** l√† tr·ªü th√†nh m·ªôt c√¥ng c·ª• h·ªØu √≠ch cho c·ªông ƒë·ªìng, gi√∫p n√¢ng cao nh·∫≠n th·ª©c v√† h·ªó tr·ª£ qu√° tr√¨nh chƒÉm s√≥c s·ª©c kh·ªèe da.  

·ª®ng d·ª•ng s·∫Ω kh√¥ng ng·ª´ng ƒë∆∞·ª£c c·∫£i thi·ªán nh·∫±m ƒë√°p ·ª©ng t·ªët h∆°n nhu c·∫ßu c·ªßa ng∆∞·ªùi d√πng.

# H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ·ª©ng d·ª•ng Chatbot - SkinChat

ƒê·ªÉ s·ª≠ d·ª•ng ·ª©ng d·ª•ng, b·∫°n vui l√≤ng th·ª±c hi·ªán theo c√°c b∆∞·ªõc sau:

1. Nh·∫•n v√†o m·ª•c **Chatbot**.
2. G√µ c√¢u h·ªèi v√†o khung chat.

**L∆∞u √Ω:**
- C√°c c√¢u h·ªèi c·∫ßn li√™n quan ƒë·∫øn ch·ªß ƒë·ªÅ da li·ªÖu.
- C√¢u h·ªèi c·ªßa b·∫°n ph·∫£i tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n v√† ch√≠nh s√°ch c·ªßa ch√∫ng t√¥i.

Sau khi ho√†n th√†nh hai b∆∞·ªõc tr√™n, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c c√¢u tr·∫£ l·ªùi t·ª´ chatbot ho·∫∑c chuy√™n gia t∆∞ v·∫•n.""")
    
# ====== ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng Page ======
if selected == "ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng":
    st.markdown("""## ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng SkinChat

1. *Gi·ªõi thi·ªáu v·ªÅ d·ªãch v·ª•:*  
   ***SkinChat*** cung c·∫•p d·ªãch v·ª• t∆∞ v·∫•n li√™n quan ƒë·∫øn c√°c v·∫•n ƒë·ªÅ da li·ªÖu, nh·∫±m h·ªó tr·ª£ ng∆∞·ªùi d√πng hi·ªÉu r√µ h∆°n v·ªÅ c√°c t√¨nh tr·∫°ng da c·ªßa m√¨nh v√† cung c·∫•p th√¥ng tin tham kh·∫£o. 

2. *Tr√°ch nhi·ªám c·ªßa ng∆∞·ªùi d√πng:*  
   Ng∆∞·ªùi d√πng ch·ªãu ho√†n to√†n tr√°ch nhi·ªám ƒë·ªëi v·ªõi c√°c h√†nh ƒë·ªông y t·∫ø d·ª±a tr√™n th√¥ng tin t·ª´ SkinChat.  
   ·ª®ng d·ª•ng ch·ªâ cung c·∫•p th√¥ng tin tham kh·∫£o v·ªÅ da li·ªÖu, v√† ng∆∞·ªùi d√πng c·∫ßn tham kh·∫£o √Ω ki·∫øn c·ªßa c√°c chuy√™n gia da li·ªÖu tr∆∞·ªõc khi th·ª±c hi·ªán b·∫•t k·ª≥ ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã n√†o. 

3. *S·ª≠ d·ª•ng ƒë√∫ng m·ª•c ƒë√≠ch:*  
   Ng∆∞·ªùi d√πng ph·∫£i s·ª≠ d·ª•ng ***SkinChat*** ƒë√∫ng m·ª•c ƒë√≠ch t∆∞ v·∫•n v·ªÅ da li·ªÖu.  
   M·ªçi h√†nh vi l·∫°m d·ª•ng ·ª©ng d·ª•ng ƒë·ªÉ ph√°t t√°n th√¥ng tin sai l·ªách ho·∫∑c g√¢y h·∫°i ƒë·ªÅu b·ªã c·∫•m. 

4. *Tuy√™n b·ªë mi·ªÖn tr·ª´ tr√°ch nhi·ªám:*  
   ***SkinChat*** kh√¥ng ph·∫£i l√† d·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe chuy√™n nghi·ªáp v√† kh√¥ng thay th·∫ø cho c√°c √Ω ki·∫øn y t·∫ø t·ª´ b√°c sƒ©.  
   Ng∆∞·ªùi d√πng c·∫ßn ph·∫£i tham kh·∫£o v√† tu√¢n th·ªß h∆∞·ªõng d·∫´n t·ª´ c√°c chuy√™n gia y t·∫ø tr∆∞·ªõc khi ƒë∆∞a ra quy·∫øt ƒë·ªãnh ƒëi·ªÅu tr·ªã. 

5. *Quy·ªÅn s·ª≠a ƒë·ªïi v√† ng·ª´ng d·ªãch v·ª•:*  
   Nh√† ph√°t tri·ªÉn c√≥ quy·ªÅn thay ƒë·ªïi, ch·ªânh s·ª≠a n·ªôi dung ho·∫∑c ng·ª´ng cung c·∫•p d·ªãch v·ª• b·∫•t k·ª≥ l√∫c n√†o m√† kh√¥ng c·∫ßn th√¥ng b√°o tr∆∞·ªõc.  
   Ng∆∞·ªùi d√πng c√≥ tr√°ch nhi·ªám theo d√µi c√°c thay ƒë·ªïi trong ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng. 

6. *Quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá:*  
   To√†n b·ªô th√¥ng tin, n·ªôi dung, v√† c√¥ng ngh·ªá ƒë∆∞·ª£c s·ª≠ d·ª•ng trong ***SkinChat*** thu·ªôc quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá c·ªßa nh√† ph√°t tri·ªÉn.  
   Vi·ªác sao ch√©p, ph√¢n ph·ªëi ho·∫∑c s·ª≠ d·ª•ng b·∫•t h·ª£p ph√°p s·∫Ω b·ªã x·ª≠ l√Ω theo quy ƒë·ªãnh ph√°p lu·∫≠t.""")
    st.markdown("""## Ch√≠nh s√°ch b·∫£o m·∫≠t SkinChat

1. ***Thu th·∫≠p d·ªØ li·ªáu c√° nh√¢n:***
   Ch√∫ng t√¥i thu th·∫≠p th√¥ng tin c√° nh√¢n nh∆∞ email v√† l·ªãch s·ª≠ cu·ªôc tr√≤ chuy·ªán ƒë·ªÉ ph·ª•c v·ª• cho vi·ªác v·∫≠n h√†nh ·ª©ng d·ª•ng v√† c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.  
   Th√¥ng tin n√†y kh√¥ng ƒë∆∞·ª£c thu th·∫≠p v√¨ m·ª•c ƒë√≠ch kinh doanh hay qu·∫£ng c√°o.

2. ***L∆∞u tr·ªØ v√† b·∫£o v·ªá d·ªØ li·ªáu:***
   Th√¥ng tin c√° nh√¢n c·ªßa ng∆∞·ªùi d√πng ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n c√°c h·ªá th·ªëng b·∫£o m·∫≠t cao, ƒë·∫£m b·∫£o r·∫±ng ch·ªâ nh·ªØng nh√¢n vi√™n c√≥ quy·ªÅn truy c·∫≠p m·ªõi c√≥ th·ªÉ xem x√©t d·ªØ li·ªáu n√†y.  
   Ch√∫ng t√¥i cam k·∫øt kh√¥ng s·ª≠ d·ª•ng th√¥ng tin c√° nh√¢n ngo√†i m·ª•c ƒë√≠ch v·∫≠n h√†nh ·ª©ng d·ª•ng.

3. ***Quy·ªÅn c·ªßa ng∆∞·ªùi d√πng:***  
   Ng∆∞·ªùi d√πng c√≥ to√†n quy·ªÅn ki·ªÉm so√°t d·ªØ li·ªáu c√° nh√¢n c·ªßa m√¨nh.  
   B·∫°n c√≥ th·ªÉ y√™u c·∫ßu x√≥a, ch·ªânh s·ª≠a ho·∫∑c xu·∫•t d·ªØ li·ªáu b·∫•t c·ª© l√∫c n√†o b·∫±ng c√°ch li√™n h·ªá v·ªõi ƒë·ªôi ng≈© h·ªó tr·ª£.

4. ***Chia s·∫ª th√¥ng tin v·ªõi b√™n th·ª© ba:***  
   Trong tr∆∞·ªùng h·ª£p c·∫ßn thi·∫øt ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám d·ªãch v·ª• ho·∫∑c h·ªó tr·ª£ t∆∞ v·∫•n chuy√™n s√¢u, ch√∫ng t√¥i c√≥ th·ªÉ chia s·∫ª th√¥ng tin v·ªõi c√°c chuy√™n gia da li·ªÖu.  
   Vi·ªác chia s·∫ª n√†y s·∫Ω ch·ªâ ƒë∆∞·ª£c th·ª±c hi·ªán khi c√≥ s·ª± ƒë·ªìng √Ω c·ªßa ng∆∞·ªùi d√πng v√† ƒë·∫£m b·∫£o tu√¢n th·ªß quy ƒë·ªãnh b·∫£o m·∫≠t.

5. ***B·∫£o m·∫≠t th√¥ng tin nh·∫°y c·∫£m:***  
   Ch√∫ng t√¥i √°p d·ª•ng c√°c bi·ªán ph√°p b·∫£o m·∫≠t ƒë·∫∑c bi·ªát ƒë·ªÉ b·∫£o v·ªá nh·ªØng th√¥ng tin n√†y, bao g·ªìm m√£ h√≥a d·ªØ li·ªáu v√† ki·ªÉm so√°t truy c·∫≠p nghi√™m ng·∫∑t, ƒë·∫£m b·∫£o r·∫±ng th√¥ng tin n√†y kh√¥ng b·ªã truy c·∫≠p tr√°i ph√©p ho·∫∑c r√≤ r·ªâ ra ngo√†i.

6. ***C∆° ch·∫ø khi·∫øu n·∫°i v√† li√™n h·ªá:***  
   N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc ho·∫∑c khi·∫øu n·∫°i li√™n quan ƒë·∫øn b·∫£o m·∫≠t d·ªØ li·ªáu, ng∆∞·ªùi d√πng c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email h·ªó tr·ª£: ***skinchat.support@gmail.com***.  
   Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ trong th·ªùi gian s·ªõm nh·∫•t.""")
    
    
# ====== Chatbot Page ======
if selected == "Chatbot":
    skinchat_css()
    st.title("SkinChat")
    
    if "file_uploaded" not in st.session_state:
        st.session_state.file_uploaded = None
    
    if "receive_mail_state" not in st.session_state:
        st.session_state.receive_mail_state = False
    
    if "messages" not in st.session_state:
        st.session_state.messages = []
        st.session_state.messages.append({'type':'text',
                                          'role':'assistant', 
                                          'content':"**Xin ch√†o, t√¥i l√† b√°c sƒ© AI - SkinChat. H√£y h·ªèi nh·ªØng c√¢u h·ªèi v·ªÅ da li·ªÖu ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nh√©!**", 
                                          'illustration':None
                                          })
        
    for message in st.session_state.messages:
        if message['role'] == "assistant":
            with st.chat_message(message['role'], avatar="üë©‚Äç‚öïÔ∏è"):
                if message['type'] == "text":
                    st.markdown(message['content'])
                    if message['illustration'] is not None:
                        with st.expander("**·∫¢nh minh h·ªça** (*L∆∞u √Ω:* C√≥ th·ªÉ g√¢y kh√≥ ch·ªãu!)"):
                            st.image(message['illustration'])
                else:
                    st.markdown("""D·ª±a tr√™n h√¨nh ·∫£nh c·ªßa b·∫°n, ch√∫ng t√¥i s·∫Ω d·ª±a c√°c h√¨nh ·∫£nh tri·ªáu ch·ª©ng t∆∞∆°ng t·ª± ƒë·ªÉ ƒë∆∞a ra chu·∫©n ƒëo√°n cho b·∫°n. **Tuy nhi√™n**, xin l∆∞u √Ω r·∫±ng ƒë√¢y ch·ªâ l√† nh·ªØng k·∫øt qu·∫£ d·ª±a tr√™n ph√¢n t√≠ch h√¨nh ·∫£nh v√† kh√¥ng thay th·∫ø cho s·ª± t∆∞ v·∫•n ho·∫∑c ch·∫©n ƒëo√°n y t·∫ø ch√≠nh th·ª©c. ƒê·ªÉ c√≥ k·∫øt qu·∫£ ch√≠nh x√°c v√† ƒë√°ng tin c·∫≠y, ch√∫ng t√¥i khuy·∫øn kh√≠ch b·∫°n n√™n tham kh·∫£o √Ω ki·∫øn t·ª´ c√°c chuy√™n gia y t·∫ø ho·∫∑c b√°c sƒ©.""")
                    col1, col2 = st.columns(2)
                    with col1:
                        st.image(message['illustration'])
                    with col2:
                        st.markdown(message['content'])
                    
        else:
            with st.chat_message(message['role']):
                if message['type'] == "text":
                    st.markdown(message['content'])
                else:
                    with st.expander("**·∫¢nh upload c·ªßa b·∫°n**"):
                        st.image(message['illustration'])
                        
                
    if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n t·∫°i ƒë√¢y!"):
        # input
        with st.chat_message("user"):
            st.markdown(prompt)
        st.session_state.messages.append({'type':'text', 'role':'user', 'content':prompt})
        mail_list = extract_emails(prompt)
        if st.session_state.receive_mail_state == False or len(mail_list)==0:
            # Get response
            with st.chat_message("assistant", avatar="üë©‚Äç‚öïÔ∏è"):
                message_placeholder = st.empty()
                text = ""
                for c in "B√°c sƒ© AI ƒëang ƒë·ªçc v√† tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa b·∫°n...":
                    text += c 
                    message_placeholder.markdown(text)
                    time.sleep(0.01)
                response = get_response(prompt)
                
                b, response = Evaluate_response(prompt, response)
                st.session_state.receive_mail_state = b
                illustration = illustrate(response)
                
                text = ""
                for c in response:
                    text += c 
                    message_placeholder.markdown(text)
                    time.sleep(0.003)
                if illustration is not None:
                    with st.expander("**·∫¢nh minh h·ªça** (*L∆∞u √Ω:* C√≥ th·ªÉ g√¢y kh√≥ ch·ªãu!)"):
                        st.image(illustration)
            st.session_state.messages.append({'type':'text', 'role':'assistant', 'content':response, 'illustration':illustration})
        else:
            if len(mail_list) > 0:
                email = mail_list[0]
                check = send_question_email(email, st.session_state.messages[len(st.session_state.messages)-3]['content'])
                if check:
                    with st.chat_message("assistant", avatar="üë©‚Äç‚öïÔ∏è"):
                        st.markdown("C√¢u h·ªèi ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi chuy√™n gia! B·∫°n vui l√≤ng check mail sau 3-5 ng√†y ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c c√¢u tr·∫£ l·ªùi t·ª´ chuy√™n gia nh√©!")
                    st.session_state.messages.append({'type':'text','role':'assistant', 'content':"C√¢u h·ªèi ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi chuy√™n gia! B·∫°n vui l√≤ng check mail sau 3-5 ng√†y ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c c√¢u tr·∫£ l·ªùi t·ª´ chuy√™n gia nh√©!", 'illustration':None})
                else:
                    with st.chat_message("assistant", avatar="üë©‚Äç‚öïÔ∏è"):
                        st.markdown("ƒê√£ c√≥ l·ªói v·ªõi ch·ª©c nƒÉng g·ª≠i mail ƒë·∫øn chuy√™n gia! Vui l√≤ng th·ª≠ l·∫°i sau!")
                    st.session_state.messages.append({'type':'text','role':'assistant', 'content':"ƒê√£ c√≥ l·ªói v·ªõi ch·ª©c nƒÉng g·ª≠i mail ƒë·∫øn chuy√™n gia! Vui l√≤ng th·ª≠ l·∫°i sau!", 'illustration': None})
            st.session_state.receive_mail_state = False
            
    if uploaded_file := st.file_uploader(
            "**[NEW]** Chu·∫©n ƒëo√°n th√¥ng qua ·∫£nh", type=["png", "jpg", "jpeg"]
        ):
        if st.session_state.file_uploaded is None:
            st.session_state.file_uploaded = ""
            image = Image.open(uploaded_file)
            image_path, diagnosis_name, another_diagnosis = diagnosis(image)
            
            # User 
            with st.chat_message("user"):
                with st.expander("**·∫¢nh upload c·ªßa b·∫°n**"):
                    st.image(uploaded_file)
            st.session_state.messages.append({'type':'image', 'role':'user', 'content':"", 'illustration':uploaded_file})

            
            # Assistant
            text = diagnosis_template.format(diagnosis_name, get_response(diagnosis_name + "l√† g√¨?"),another_diagnosis)
            with st.chat_message("assistant", avatar="üë©‚Äç‚öïÔ∏è"):
                st.markdown("""D·ª±a tr√™n h√¨nh ·∫£nh c·ªßa b·∫°n, ch√∫ng t√¥i s·∫Ω d·ª±a c√°c h√¨nh ·∫£nh tri·ªáu ch·ª©ng t∆∞∆°ng t·ª± ƒë·ªÉ ƒë∆∞a ra ch·∫©n ƒëo√°n cho b·∫°n. **Tuy nhi√™n**, xin l∆∞u √Ω r·∫±ng ƒë√¢y ch·ªâ l√† nh·ªØng k·∫øt qu·∫£ d·ª±a tr√™n ph√¢n t√≠ch h√¨nh ·∫£nh v√† kh√¥ng thay th·∫ø cho s·ª± t∆∞ v·∫•n ho·∫∑c ch·∫©n ƒëo√°n y t·∫ø ch√≠nh th·ª©c. ƒê·ªÉ c√≥ k·∫øt qu·∫£ ch√≠nh x√°c v√† ƒë√°ng tin c·∫≠y, ch√∫ng t√¥i khuy·∫øn kh√≠ch b·∫°n n√™n tham kh·∫£o √Ω ki·∫øn t·ª´ c√°c chuy√™n gia y t·∫ø ho·∫∑c b√°c sƒ©.""")
                col1, col2 = st.columns(2)
                with col1:
                    st.image(image_path)
                with col2:
                    st.markdown(text)
            st.session_state.messages.append({'type':'image', 'role':'assistant', 'content':text, 'illustration':image_path})
    else:
        st.session_state.file_uploaded = None
            
            

# Th√™m logo ·ªü g√≥c d∆∞·ªõi b√™n tr√°i t·ª´ th∆∞ m·ª•c
footer_logo_path = "./img/logo/logodoc.png"  # ƒê∆∞·ªùng d·∫´n ƒë·∫øn logo ·ªü g√≥c d∆∞·ªõi
if os.path.exists(footer_logo_path):  # Ki·ªÉm tra xem t·ªáp c√≥ t·ªìn t·∫°i kh√¥ng
    footer_logo_base64 = None
    with open(footer_logo_path, "rb") as image_file:
        footer_logo_base64 = base64.b64encode(image_file.read()).decode()
    st.markdown(f'<img class="logo" src="data:image/png;base64,{footer_logo_base64}" alt="Logo" />', unsafe_allow_html=True)